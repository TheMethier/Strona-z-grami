// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using New.Models;

#nullable disable

namespace New.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221220122153_optn")]
    partial class optn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("New.Models.Element_koszyka", b =>
                {
                    b.Property<int>("ElementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ElementId"), 1L, 1);

                    b.Property<int>("GraId")
                        .HasColumnType("int");

                    b.Property<int>("Ilość")
                        .HasColumnType("int");

                    b.Property<double>("Razem")
                        .HasColumnType("float");

                    b.HasKey("ElementId");

                    b.HasIndex("GraId");

                    b.ToTable("Element_koszyka");
                });

            modelBuilder.Entity("New.Models.Gra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aktywacja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Kategoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Okładka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specyfikacjat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zdjęcie1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zdjęcie2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zdjęcie3")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Gra");
                });

            modelBuilder.Entity("New.Models.NowyKomentarz", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("GraId")
                        .HasColumnType("int");

                    b.Property<string>("Ocena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treść")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GraId");

                    b.ToTable("NowyKomentarz");
                });

            modelBuilder.Entity("New.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreditCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Razem")
                        .HasColumnType("float");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("New.Models.OrderDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<int>("GraId")
                        .HasColumnType("int");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ilość")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GraId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("New.Models.Element_koszyka", b =>
                {
                    b.HasOne("New.Models.Gra", "Gra")
                        .WithMany("Element_koszyka")
                        .HasForeignKey("GraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gra");
                });

            modelBuilder.Entity("New.Models.NowyKomentarz", b =>
                {
                    b.HasOne("New.Models.Gra", "Gra")
                        .WithMany("NowyKomentarz")
                        .HasForeignKey("GraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gra");
                });

            modelBuilder.Entity("New.Models.OrderDetails", b =>
                {
                    b.HasOne("New.Models.Gra", "Gra")
                        .WithMany("OrderDetails")
                        .HasForeignKey("GraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("New.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gra");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("New.Models.Gra", b =>
                {
                    b.Navigation("Element_koszyka");

                    b.Navigation("NowyKomentarz");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("New.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
